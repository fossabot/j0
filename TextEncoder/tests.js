/* eslint-disable no-magic-numbers */
function test(TextEncoder, name = 'TextEncoder') {

	describe(name, function () {

		it('should encode "abc"', function () {
			const src = 'abc';
			const actual = new TextEncoder().encode(src);
			const expected = [0x61, 0x62, 0x63];
			assert.deepEqual(Array.from(actual), expected);
		});

		it('should encode "こんにちは"', function () {
			const src = 'こんにちは';
			const actual = new TextEncoder().encode(src);
			const expected = [0xE3, 0x81, 0x93, 0xE3, 0x82, 0x93, 0xE3, 0x81, 0xAB, 0xE3, 0x81, 0xA1, 0xE3, 0x81, 0xAF];
			assert.deepEqual(Array.from(actual), expected);
		});

		it('should encode "𐀀𐀁𐀂𐀃𐀄𐀅𐀆𐀇𐀈𐀉𐀊𐀋𐀌𐀍𐀎𐀏"', function () {
			const src = '𐀀𐀁𐀂𐀃𐀄𐀅𐀆𐀇𐀈𐀉𐀊𐀋𐀌𐀍𐀎𐀏';
			const actual = new TextEncoder().encode(src);
			const expected = [
				0xF0, 0x90, 0x80, 0x80,
				0xF0, 0x90, 0x80, 0x81,
				0xF0, 0x90, 0x80, 0x82,
				0xF0, 0x90, 0x80, 0x83,
				0xF0, 0x90, 0x80, 0x84,
				0xF0, 0x90, 0x80, 0x85,
				0xF0, 0x90, 0x80, 0x86,
				0xF0, 0x90, 0x80, 0x87,
				0xF0, 0x90, 0x80, 0x88,
				0xF0, 0x90, 0x80, 0x89,
				0xF0, 0x90, 0x80, 0x8A,
				0xF0, 0x90, 0x80, 0x8B,
				0xF0, 0x90, 0x80, 0x8C,
				0xF0, 0x90, 0x80, 0x8D,
				0xF0, 0x90, 0x80, 0x8E,
				0xF0, 0x90, 0x80, 0x8F
			];
			assert.deepEqual(Array.from(actual), expected);
		});

	});

}
export default test;
