/* eslint-disable no-magic-numbers */
import {
	createTypedArray,
	Uint8Array
} from 'j0';

function test(TextDecoder, name = 'TextDecoder') {

	describe(name, function () {

		it('should decode [0x61, 0x62, 0x63] to "abc"', function () {
			const src = [0x61, 0x62, 0x63];
			const expected = 'abc';
			const actual = new TextDecoder().decode(createTypedArray(Uint8Array, src));
			assert.equal(actual, expected);
		});

		it('should decode bytes to "こんにちは"', function () {
			const src = [0xE3, 0x81, 0x93, 0xE3, 0x82, 0x93, 0xE3, 0x81, 0xAB, 0xE3, 0x81, 0xA1, 0xE3, 0x81, 0xAF];
			const expected = 'こんにちは';
			const actual = new TextDecoder().decode(createTypedArray(Uint8Array, src));
			assert.equal(actual, expected);
		});

		it('should decode bytes to "𐀀𐀁𐀂𐀃𐀄𐀅𐀆𐀇𐀈𐀉𐀊𐀋𐀌𐀍𐀎𐀏"', function () {
			const src = [
				0xF0, 0x90, 0x80, 0x80,
				0xF0, 0x90, 0x80, 0x81,
				0xF0, 0x90, 0x80, 0x82,
				0xF0, 0x90, 0x80, 0x83,
				0xF0, 0x90, 0x80, 0x84,
				0xF0, 0x90, 0x80, 0x85,
				0xF0, 0x90, 0x80, 0x86,
				0xF0, 0x90, 0x80, 0x87,
				0xF0, 0x90, 0x80, 0x88,
				0xF0, 0x90, 0x80, 0x89,
				0xF0, 0x90, 0x80, 0x8A,
				0xF0, 0x90, 0x80, 0x8B,
				0xF0, 0x90, 0x80, 0x8C,
				0xF0, 0x90, 0x80, 0x8D,
				0xF0, 0x90, 0x80, 0x8E,
				0xF0, 0x90, 0x80, 0x8F
			];
			const expected = '𐀀𐀁𐀂𐀃𐀄𐀅𐀆𐀇𐀈𐀉𐀊𐀋𐀌𐀍𐀎𐀏';
			const actual = new TextDecoder().decode(createTypedArray(Uint8Array, src));
			assert.equal(actual, expected);
		});

	});

}

export default test;
